@model Gruppenverteilung.Models.AdministrationModel
@using Gruppenverteilung.Code;

@{
    ViewData["Title"] = "AdministrationView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Übersicht</h2>

<div class="row">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#">Übersicht</a></li>
        <li><a asp-area="" asp-controller="Administration" asp-action="AdministrationImportView">Daten einlesen</a></li>
        <li><a asp-area="" asp-controller="Administration" asp-action="AdministrationEditView">Zuweisen</a></li>
    </ul>
</div>

<div class="row">
    <form asp-controller="Administration" asp-action="ShowGroups" method="post" class="col-lg-12">

        <div class="row">
            @foreach (Group g in Model.groups)
            {
                <div class="col-lg-2">
                    <label>
                        @g.Name
                    </label>

                    @foreach (Member m in g.MemberList)
                    {
                        <p>@m.Name, @m.Studiengang.ToString()</p>
                    }

                    <hr />
                    <label>
                        Gruppen Stats:
                    </label>

                    @foreach (KeyValuePair<Studiengang, double> kvp in g.CourseRates)
                    {
                        <p>@kvp.Key: ~@Math.Round(kvp.Value * 100, 2)%</p>
                    }
                </div>
            }
        </div>

        <div class="row">
            <input class="btn btn-primary" type="submit" formaction="RefreshGroups" value="Refresh Groups" />
            <input class="btn btn-primary" type="submit" formaction="SimulateGroups" value="Simulate" />
        </div>

    </form>

</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}