@model Gruppenverteilung.Models.AdministrationModel
@using Gruppenverteilung.Code;

@{
    ViewData["Title"] = "AdministrationView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Übersicht</h2>

<div class="row">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#">Übersicht</a></li>
        <li><a asp-area="" asp-controller="Administration" asp-action="AdministrationImportView">Daten einlesen</a></li>
        <li><a asp-area="" asp-controller="Administration" asp-action="AdministrationEditView">Zuweisen</a></li>
    </ul>
</div>

<div class="row">
    <form asp-controller="Administration" asp-action="ShowGroups" method="post" class="col-lg-12">

            @for (int i = 0; i < Model.groups.Count; i+=3)
            {
                <div class="row">
                @for (int j = i; j < i + 3; j++)
                {
                    if (j < Model.groups.Count)
                    {
                    <div class="col-lg-4">
                    <label>
                        @Model.groups[j].Name
                    </label>
                    <ul class="list-group">
                        @*Tutoren anzeigen*@
                        @foreach (Tutor t in Model.groups[j].TutorList)
                        {
                            <li class="list-group-item"><b style="color:blue">@t.Name</b></li>
                        }

                        @*Erstis anzeigen*@
                        @foreach (Member m in Model.groups[j].MemberList)
                        {
                            <li class="list-group-item">@m.Name, @m.Studiengang.ToString()</li>
                        }
                    </ul>


                    <label>
                        Gruppen Stats:
                    </label>



                    @*Kursraten Anzeigen*@
                    @foreach (KeyValuePair<Studiengang, double> kvp in Model.groups[j].CourseRates)
                    {
                        <p>@kvp.Key:</p>

                    @if (kvp.Key.ToString() == "Informatik")
                    {
                        <div class="progress">
                            <div class="progress-bar progress-bar-danger" role="progressbar"
                                 aria-valuemin="0" aria-valuemax="100" style="width:@Math.Round(kvp.Value * 100, 0).ToString()%">
                                @Math.Round(kvp.Value * 100, 2).ToString()%
                            </div>
                        </div>
                    }

                    @if (kvp.Key.ToString() == "MCD")
                    {
                        <div class="progress">
                            <div class="progress-bar progress-bar-info" role="progressbar"
                                 aria-valuemin="0" aria-valuemax="100" style="width:@Math.Round(kvp.Value * 100, 0).ToString()%">
                                @Math.Round(kvp.Value * 100, 2).ToString()% 
                            </div>
                        </div>
                    }

                    @if (kvp.Key.ToString() == "Wirtschaftsinformatik")
                    {
                        <div class="progress">
                            <div class="progress-bar progress-bar-success" role="progressbar"
                                 aria-valuemin="0" aria-valuemax="100" style="width:@Math.Round(kvp.Value * 100, 0).ToString()%">
                                @Math.Round(kvp.Value * 100, 2).ToString()% @kvp.Key
                            </div>
                        </div>
                    }

                    @if (kvp.Key.ToString() == "Elektrotechnik")
                    {
                        <div class="progress">
                            <div class="progress-bar progress-bar-warning" role="progressbar"
                                 aria-valuemin="0" aria-valuemax="100" style="width:@Math.Round(kvp.Value * 100, 0).ToString()%">
                                @Math.Round(kvp.Value * 100, 2).ToString()% @kvp.Key
                            </div>
                        </div>
                    }
                    }
                </div>
                    }
                }
            </div>
            }

        <div class="row">
            <input class="btn btn-primary" type="submit" formaction="RefreshGroups" value="Refresh Groups" />
            <input class="btn btn-primary" type="submit" formaction="SimulateGroups" value="Simulate" />
        </div>
        
    </form>

</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}